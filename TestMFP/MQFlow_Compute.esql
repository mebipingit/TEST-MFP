

CREATE COMPUTE MODULE MQFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE chNS CHARACTER InputRoot.XMLNSC.(XMLNSC.Element)*[1].(XMLNSC.NamespaceDecl)*[1];	
		DECLARE chNS2 CHARACTER InputRoot.XMLNSC.*:Document.(XMLNSC.NamespaceDecl)*[1];
		SET Environment.Variables = InputRoot.XMLNSC.:Document;
		
		
			
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	

END MODULE;


		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
	/*	SET OutputRoot.Properties = InputRoot.Properties;
		
		CREATE LASTCHILD OF OutputRoot DOMAIN 'MQMD' NAME 'MQMD';
		SET OutputRoot.MQMD.Format = MQFMT_RF_HEADER_2 ;
		CREATE NEXTSIBLING of OutputRoot.MQMD DOMAIN 'MQRFH2' NAME 'MQRFH2';
		SET OutputRoot.MQRFH2.(MQRFH2.Field)Version = 2;
		SET OutputRoot.MQRFH2.(MQRFH2.Field)Format = 'MQSTR';
		
		DECLARE rowTEST ROW;
		SET rowTEST.Parent.Child1.Value = 'Child1';
		
		CREATE FIELD rowTEST.Parent.Child2 ;
		
		DECLARE bl1 BOOLEAN EXISTS(rowTEST.Parent.Child1.*[]);
		
		DECLARE bl2 BOOLEAN EXISTS(rowTEST.Parent.Child2.*[]);
		
		DECLARE bl3 BOOLEAN EXISTS(rowTEST.Parent.Child3.*[]);
		
		
		
				DECLARE EXIT HANDLER FOR SQLSTATE LIKE '%'
		BEGIN
		END;


		DECLARE EXIT HANDLER FOR SQLSTATE LIKE '%'
		BEGIN
			DECLARE EXIT HANDLER FOR SQLSTATE LIKE '%'
			BEGIN
			SET OutputRoot = InputRoot;
			
			END;
			SET OutputRoot = InputRoot;
			DECLARE intTest INTEGER 1/0;
		END;
		
		SET Environment.Vraibles.Count = 1;
		
		DECLARE intTest INTEGER 1/0;
			
		SET Environment.Vraibles.Count = 2;
		
		*/
